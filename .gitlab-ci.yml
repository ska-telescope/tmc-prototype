# GitLab CI in conjunction with GitLab Runner can use Docker Engine to test and build any application.
# Docker, when used with GitLab CI, runs each job in a separate and isolated container using the predefined image that is set up in .gitlab-ci.yml.
# In this case we use the latest python docker image to build and test this project.
image: nexus.engageska-portugal.pt/ska-docker/ska-python-buildenv:latest

variables:
  DOCKER_DRIVER: overlay2

services:
  - docker:dind

# cache is used to specify a list of files and directories which should be cached between jobs. You can only use paths that are within the project workspace.
# If cache is defined outside the scope of jobs, it means it is set globally and all jobs will use that definition
cache:
  paths:
    - build

# The YAML file defines a set of jobs with constraints stating when they should be run.
# You can specify an unlimited number of jobs which are defined as top-level elements with an arbitrary name and always have to contain at least the script clause.
# In this case we have only the test job which produce an artifacts (it must be placed into a directory called "public")
# It is also specified that only the master branch will be subject of this job.

stages:
  - build
  - test
  - publish
  - pages

build wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd /app/tmcprototype/CentralNode
    - python setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./dist/

build wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd /app/tmcprototype/CentralNode
    - python setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./dist/

run tests:
  stage: test
  image: nexus.engageska-portugal.pt/ska-docker/tango-builder:latest
  before_script:
  - docker login -u $DOCKER_REGISTRY_USER_LOGIN -p $CI_REGISTRY_PASS_LOGIN $CI_NX_REGISTRY
  tags:
    - docker-executor
  script:
    - apt install -y python3-pip
    - echo $(ls -d ./dist/*.whl | grep $CI_COMMIT_SHORT_SHA)
    - pip3 install -U $(ls -d ./dist/*.whl | grep $CI_COMMIT_SHORT_SHA)
    - make test

publish to nexus:
  stage: publish
  tags:
    - docker-executor
  variables:
    TWINE_USERNAME: $TWINE_USERNAME
    TWINE_PASSWORD: $TWINE_PASSWORD
  script:
    # check metadata requirements
    - scripts/validate-metadata.sh
    - pip install twine
    - twine upload --repository-url $PYPI_REPOSITORY_URL dist/*
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^.+$/ # Confirm tag message exists
      - $CI_COMMIT_TAG =~ /^((([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)$/ # Confirm semantic versioning of tag

pages:
  image: nexus.engageska-portugal.pt/ska-docker/tango-builder:latest
  before_script:
  - docker login -u $DOCKER_REGISTRY_USER_LOGIN -p $CI_REGISTRY_PASS_LOGIN $CI_NX_REGISTRY
  tags:
    - docker-executor
  stage: pages
  script:
    - mv build public
    - mv public/dishmaster_htmlcov/* public
    - mv public/dishleafnode_htmlcov/* public
    - mv public/subarraynode_htmlcov/* public
    - mv public/centralnode_htmlcov/* public
    - make push
  artifacts:
    paths:
      - public
