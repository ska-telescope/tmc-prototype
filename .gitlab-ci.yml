# GitLab CI in conjunction with GitLab Runner can use Docker Engine to test and build any application.
# Docker, when used with GitLab CI, runs each job in a separate and isolated container using the predefined image that is set up in .gitlab-ci.yml.
# In this case we use the latest python docker image to build and test this project.
image: nexus.engageska-portugal.pt/ska-docker/ska-python-buildenv:9.3.2

variables:
  DOCKER_DRIVER: overlay2

# cache is used to specify a list of files and directories which should be cached between jobs. You can only use paths that are within the project workspace.
# If cache is defined outside the scope of jobs, it means it is set globally and all jobs will use that definition
cache:
  paths:
    - build

before_script:
  - python3 -m pip install -r requirements-dev.txt
  - python3 -m pip install pipdeptree

# The YAML file defines a set of jobs with constraints stating when they should be run.
# You can specify an unlimited number of jobs which are defined as top-level elements with an arbitrary name and always have to contain at least the script clause.
# In this case we have only the test job which produce an artifacts (it must be placed into a directory called "public")
# It is also specified that only the master branch will be subject of this job.

stages:
  - build
  - unit-test
  - test
  - linting
  - publish
  - pages
  - release
  - trigger

build CentralNode wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/centralnode
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/centralnode/dist/

build CentralNode wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/centralnode
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/centralnode/dist/

build CentralNodeLow wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/centralnodelow
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/centralnodelow/dist/

build CentralNodeLow wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/centralnodelow
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/centralnodelow/dist/

build SubarrayNode wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/subarraynode
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/subarraynode/dist/

build SubarrayNode wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/subarraynode
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/subarraynode/dist/

build SubarrayNodeLow wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/subarraynodelow
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/subarraynodelow/dist/

build SubarrayNodeLow wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/subarraynodelow
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/subarraynodelow/dist/

build DishLeafNode wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/dishleafnode
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/dishleafnode/dist/

build DishLeafNode wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/dishleafnode
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/dishleafnode/dist/

build CspMasterLeafNode wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/cspmasterleafnode
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/cspmasterleafnode/dist/

build CspMasterLeafNode wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/cspmasterleafnode
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/cspmasterleafnode/dist/

build CspSubarrayLeafNode wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/cspsubarrayleafnode
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/cspsubarrayleafnode/dist/


build SdpMasterLeafNode wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/sdpmasterleafnode
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/sdpmasterleafnode/dist/


build SdpMasterLeafNode wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/sdpmasterleafnode
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/sdpmasterleafnode/dist/

build CspSubarrayLeafNode wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/cspsubarrayleafnode
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/cspsubarrayleafnode/dist/

build SdpSubarrayLeafNode wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/sdpsubarrayleafnode
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/sdpsubarrayleafnode/dist/

build SdpSubarrayLeafNode wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/sdpsubarrayleafnode
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/sdpsubarrayleafnode/dist/

build MccsMasterLeafNode wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/mccsmasterleafnode
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/mccsmasterleafnode/dist/

build MccsMasterLeafNode wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/mccsmasterleafnode
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/mccsmasterleafnode/dist/

build MccsSubarrayLeafNode wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/mccssubarrayleafnode
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/mccssubarrayleafnode/dist/

build MccsSubarrayLeafNode wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/mccssubarrayleafnode
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/mccssubarrayleafnode/dist/

build DishMaster wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/dishmaster
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/dishmaster/dist/

build DishMaster wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./tmcprototype/dishmaster
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./tmcprototype/dishmaster/dist/

# unit tests:
#   image: nexus.engageska-portugal.pt/ska-docker/ska-python-buildenv:latest
#   stage: unit-test
#   tags:
#     - docker-executor
#   script:
#     - make unit-test
#   artifacts:
#     paths:
#       - ./build

test-mid:
  stage: test
  tags:
    - docker-executor
  image: nexus.engageska-portugal.pt/ska-docker/deploy:0.4.2
  before_script:
      - kubectl get namespace
      - kubectl delete namespace tmcmid
      - kubectl delete namespace sdp
      - kubectl get namespace 
  script:
    - kubectl version
    # - make install-chart KUBE_NAMESPACE=tmcmid HELM_CHART=tmc-mid-umbrella UMBRELLA_CHART_PATH=charts/tmc-mid-umbrella/
    # - make wait KUBE_NAMESPACE=tmcmid
    # - make smoketest KUBE_NAMESPACE=tmcmid
    #- make test
  # after_script:
  #   - make uninstall-chart KUBE_NAMESPACE=tmcmid HELM_CHART=tmc-mid-umbrella UMBRELLA_CHART_PATH=charts/tmc-mid-umbrella/
  #   - make clean KUBE_NAMESPACE=tmcmid
  #   - make delete_namespace KUBE_NAMESPACE=tmcmid
  #   - make delete_namespace-sdp
  environment:
    name: test
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "charts/build"
    reports:
      junit: charts/build/report.xml

test-low:
  stage: test
  tags:
    - docker-executor
  image: nexus.engageska-portugal.pt/ska-docker/deploy:0.4.2
  # before_script:
  #   - make delete_namespace-sdp $KUBE_NAMESPACE=tmclow
  #   - make delete_namespace $KUBE_NAMESPACE=tmclow
  script:
    - kubectl version
    - make install-chart KUBE_NAMESPACE=tmclow HELM_CHART=tmc-low-umbrella UMBRELLA_CHART_PATH=charts/tmc-low-umbrella/
    - make wait KUBE_NAMESPACE=tmclow
    - make smoketest KUBE_NAMESPACE=tmclow
    #- make test $KUBE_NAMESPACE=tmclow
  after_script:
    - make uninstall-chart KUBE_NAMESPACE=tmclow HELM_CHART=tmc-low-umbrella UMBRELLA_CHART_PATH=charts/tmc-low-umbrella/
    - make clean KUBE_NAMESPACE=tmclow
    - make delete_namespace-sdp KUBE_NAMESPACE=tmclow
    - make delete_namespace KUBE_NAMESPACE=tmclow
  environment:
    name: test
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "charts/build"
    reports:
      junit: charts/build/report.xml
  when: manual

linting:
  stage: linting
  image: nexus.engageska-portugal.pt/ska-docker/ska-python-buildenv:latest
  tags:
    - docker-executor
  script:
    - make lint
  allow_failure: true
  artifacts:
    paths:
      - ./build

publish to nexus:
  stage: publish
  tags:
    - docker-executor
  variables:
    TWINE_USERNAME: $TWINE_USERNAME
    TWINE_PASSWORD: $TWINE_PASSWORD
  script:
    - python3 -m pip install twine
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./tmcprototype/centralnode/dist/*
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./tmcprototype/centralnodelow/dist/*
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./tmcprototype/subarraynode/dist/*
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./tmcprototype/subarraynodelow/dist/*
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./tmcprototype/dishleafnode/dist/*
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./tmcprototype/cspmasterleafnode/dist/*
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./tmcprototype/sdpmasterleafnode/dist/*
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./tmcprototype/mccsmasterleafnode/dist/*
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./tmcprototype/dishmaster/dist/*
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./tmcprototype/sdpsubarrayleafnode/dist/*
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./tmcprototype/cspsubarrayleafnode/dist/*
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./tmcprototype/mccssubarrayleafnode/dist/*

  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^.+$/ # Confirm tag message exists
      - $CI_COMMIT_TAG =~ /^((([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)$/ # Confirm semantic versioning of tag

# publish_chart:
#   variables:
#     CHARTS_TO_PUBLISH: tmc-low-umbrella tmc-mid-umbrella tmc-proto
#   stage: publish
#   tags:
#     - docker-executor
#   image: nexus.engageska-portugal.pt/ska-docker/deploy:0.4.2
#   script:
#     - curl -s https://gitlab.com/ska-telescope/stupid/raw/master/scripts/publish-charts.sh | bash
#   when: manual
#   only:
#     refs:
#       - master

pages:
  image: nexus.engageska-portugal.pt/ska-docker/tango-builder:latest
  before_script:
  - docker login -u $DOCKER_REGISTRY_USERNAME -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY_HOST
  tags:
    - docker-executor
  stage: pages
  only:
    - master
  script:
    - mv build public
    - mv public/unit_test/cspmasterleafnode_htmlcov/* public
    - mv public/unit_test/cspsubarrayleafnode_htmlcov/* public
    - mv public/unit_test/sdpsubarrayleafnode_htmlcov/* public
    - mv public/unit_test/mccssubarrayleafnode_htmlcov/* public
    - mv public/unit_test/mccsmasterleafnode_htmlcov/* public
    - mv public/unit_test/sdpmasterleafnode_htmlcov/* public
    - mv public/unit_test/dishleafnode_htmlcov/* public
    - mv public/unit_test/subarraynode_htmlcov/* public
    - mv public/unit_test/centralnode_htmlcov/* public
    - mv public/unit_test/subarraynodelow_htmlcov/* public
    - mv public/unit_test/centralnodelow_htmlcov/* public
    - make push
  artifacts:
    paths:
      - public

create ci metrics:
  stage: .post
  image: nexus.engageska-portugal.pt/ska-docker/tango-builder:latest
  when: always
  tags:
    - docker-executor
  script:
    # Gitlab CI badges creation: START
    - apt-get -y update
    - apt-get install -y curl --no-install-recommends
    - curl -s https://gitlab.com/ska-telescope/ci-metrics-utilities/raw/master/scripts/ci-badges-func.sh | sh
    # Gitlab CI badges creation: END
  artifacts:
    paths:
      - ./build

#trigger:
#  image: appropriate/curl
#  stage: trigger
#  tags:
#  - docker-executor
#  script:
#  - curl -X POST -F token=$K8S_INTEGRATION_TOKEN -F ref=$K8S_INTEGRATION_TARGET_BRANCH -F "variables[HELM_CHART]=tmc-proto" https://gitlab.com/api/v4/projects/$K8S_INTEGRATION_PROJ_ID/trigger/pipeline

release tmc:
  stage: release
  image: nexus.engageska-portugal.pt/ska-docker/tango-builder:latest
  before_script:
  - docker login -u $DOCKER_REGISTRY_USERNAME -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY_HOST
  tags:
    - docker-executor
  script:
    - make release-tmc-prototype USERNAME=$GITLAB_USER_NAME EMAILID=$GITLAB_USER_EMAIL # Publish tag on the gitlab and tagged image on Nexus
  when: manual
  only:
    refs:
      - master

# Standardised included jobs
variables:
  CHARTS_TO_PUBLISH: tmc-low-umbrella tmc-mid-umbrella tmc-proto
include:
# Helm Chart Publish
# https://developer.skatelescope.org/en/latest/development/software_package_release_procedure.html#package-and-publish-helm-charts-to-the-ska-helm-chart-repository
- project: 'ska-telescope/templates-repository'
  file: 'gitlab-ci/includes/helm_publish.yml'
