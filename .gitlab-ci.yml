# GitLab CI in conjunction with GitLab Runner can use Docker Engine to test and build any application.
# Docker, when used with GitLab CI, runs each job in a separate and isolated container using the predefined image that is set up in .gitlab-ci.yml.
# In this case we use the latest python docker image to build and test this project.
image: nexus.engageska-portugal.pt/ska-docker/ska-python-buildenv:9.3.2

variables:
  DOCKER_DRIVER: overlay2

# cache is used to specify a list of files and directories which should be cached between jobs. You can only use paths that are within the project workspace.
# If cache is defined outside the scope of jobs, it means it is set globally and all jobs will use that definition
cache:
  paths:
    - build

before_script:
  - python3 -m pip install -r requirements-dev.txt
  - python3 -m pip install pipdeptree

# The YAML file defines a set of jobs with constraints stating when they should be run.
# You can specify an unlimited number of jobs which are defined as top-level elements with an arbitrary name and always have to contain at least the script clause.
# In this case we have only the test job which produce an artifacts (it must be placed into a directory called "public")
# It is also specified that only the master branch will be subject of this job.

stages:
  - build
  - test
  - linting
  - release
  - publish
  - pages

build CentralNodeLow wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./ska-tmc/centralnodelow
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./ska-tmc/centralnodelow/dist/

build CentralNodeLow wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./ska-tmc/centralnodelow
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./ska-tmc/centralnodelow/dist/

build SubarrayNodeLow wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./ska-tmc/subarraynodelow
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./ska-tmc/subarraynodelow/dist/

build SubarrayNodeLow wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./ska-tmc/subarraynodelow
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./ska-tmc/subarraynodelow/dist/

build DishLeafNode wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./ska-tmc/dishleafnode
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./ska-tmc/dishleafnode/dist/

build DishLeafNode wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./ska-tmc/dishleafnode
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./ska-tmc/dishleafnode/dist/

build CspMasterLeafNode wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./ska-tmc/cspmasterleafnode
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./ska-tmc/cspmasterleafnode/dist/

build CspMasterLeafNode wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./ska-tmc/cspmasterleafnode
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./ska-tmc/cspmasterleafnode/dist/

build CspSubarrayLeafNode wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./ska-tmc/cspsubarrayleafnode
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./ska-tmc/cspsubarrayleafnode/dist/


build SdpMasterLeafNode wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./ska-tmc/sdpmasterleafnode
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./ska-tmc/sdpmasterleafnode/dist/


build SdpMasterLeafNode wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./ska-tmc/sdpmasterleafnode
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./ska-tmc/sdpmasterleafnode/dist/

build CspSubarrayLeafNode wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./ska-tmc/cspsubarrayleafnode
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./ska-tmc/cspsubarrayleafnode/dist/

build SdpSubarrayLeafNode wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./ska-tmc/sdpsubarrayleafnode
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./ska-tmc/sdpsubarrayleafnode/dist/

build SdpSubarrayLeafNode wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./ska-tmc/sdpsubarrayleafnode
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./ska-tmc/sdpsubarrayleafnode/dist/

build MccsMasterLeafNode wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./ska-tmc/mccsmasterleafnode
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./ska-tmc/mccsmasterleafnode/dist/

build MccsMasterLeafNode wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./ska-tmc/mccsmasterleafnode
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./ska-tmc/mccsmasterleafnode/dist/

build MccsSubarrayLeafNode wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./ska-tmc/mccssubarrayleafnode
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./ska-tmc/mccssubarrayleafnode/dist/

build MccsSubarrayLeafNode wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./ska-tmc/mccssubarrayleafnode
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./ska-tmc/mccssubarrayleafnode/dist/

build DishMaster wheel for publication: # Executed on a tag
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./ska-tmc/dishmaster
    - python3 setup.py egg_info -b+$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  only:
    - tags
  artifacts:
    paths:
      - ./ska-tmc/dishmaster/dist/

build DishMaster wheel for development: # Executed on a commit
  stage: build
  tags:
    - docker-executor
  script:
    - cd ./ska-tmc/dishmaster
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel
  except:
    - tags
  artifacts:
    paths:
      - ./ska-tmc/dishmaster/dist/

# unit tests:
#   image: nexus.engageska-portugal.pt/ska-docker/ska-python-buildenv:latest
#   stage: unit-test
#   tags:
#     - docker-executor
#   script:
#     - make unit-test
#   artifacts:
#     paths:
#       - ./build


build-image:
  stage: build
  image: nexus.engageska-portugal.pt/ska-docker/deploy:0.4.3
  tags:
    - k8srunner
  script:
    - export IMG="$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
    - docker build --pull --tag "$IMG" .
    - echo -n "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker push "$IMG"
  artifacts:
    paths:
      - current_tag.txt

test-mid:
   stage: test
   dependencies:
     - build-image
   tags:
     - k8srunner
   image: nexus.engageska-portugal.pt/ska-docker/deploy:0.4.3
   before_script:
     - kubectl get namespace
   script:
     - kubectl version
     - make clean
     - make install-chart MINIKUBE=false
     - make wait
     - make smoketest
     - make test MARK=mid && [ -f "build/report.xml" ]
   after_script:
     - make uninstall-chart
     - make clean
     - make delete_namespace-sdp
     - make delete_namespace
     - mkdir -p build
     - ls -la build
   environment:
     name: test
     kubernetes:
       namespace: ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-mid
   artifacts:
     name: "$CI_PROJECT_NAME-$CI_JOB_ID"
     paths:
       - build
     reports:
       junit: build/report.xml
     when: always


# test-low:
#   stage: test
#   dependencies:
#     - build-image
#   tags:
#     - k8srunner
#   image: nexus.engageska-portugal.pt/ska-docker/deploy:0.4.3
#   before_script:
#     - kubectl get namespace
#   script:
#     - kubectl version
#     - make clean
#     - make install-chart MINIKUBE=false HELM_CHART=tmc-low-umbrella UMBRELLA_CHART_PATH=charts/tmc-low-umbrella/
#     - make wait
#     - make smoketest
#     - make test MARK=low && [ -f "build/report.xml" ]
#   after_script:
#     - make uninstall-chart HELM_CHART=tmc-low-umbrella UMBRELLA_CHART_PATH=charts/tmc-low-umbrella/
#     - make clean
#     - make delete_namespace-sdp
#     - make delete_namespace
#     - mkdir -p build
#     - ls -la build
#   environment:
#     name: test
#     kubernetes:
#       namespace: ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-low
#   artifacts:
#     name: "$CI_PROJECT_NAME-$CI_JOB_ID"
#     paths:
#       - build
#     reports:
#       junit: build/report.xml


linting:
  stage: linting
  image: nexus.engageska-portugal.pt/ska-docker/ska-python-buildenv:latest
  tags:
    - docker-executor
  script:
    - make lint
  allow_failure: true
  artifacts:
    paths:
      - ./build

publish to nexus:
  stage: publish
  tags:
    - docker-executor
  variables:
    TWINE_USERNAME: $TWINE_USERNAME
    TWINE_PASSWORD: $TWINE_PASSWORD
  script:
    - python3 -m pip install twine
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./ska-tmc/centralnodelow/dist/*
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./ska-tmc/subarraynodelow/dist/*
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./ska-tmc/dishleafnode/dist/*
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./ska-tmc/cspmasterleafnode/dist/*
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./ska-tmc/sdpmasterleafnode/dist/*
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./ska-tmc/mccsmasterleafnode/dist/*
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./ska-tmc/dishmaster/dist/*
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./ska-tmc/sdpsubarrayleafnode/dist/*
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./ska-tmc/cspsubarrayleafnode/dist/*
    - twine upload --repository-url $PYPI_REPOSITORY_URL ./ska-tmc/mccssubarrayleafnode/dist/*

  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^.+$/ # Confirm tag message exists
      - $CI_COMMIT_TAG =~ /^((([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)$/ # Confirm semantic versioning of tag

pages:
  image: nexus.engageska-portugal.pt/ska-docker/tango-builder:latest
  before_script:
  - docker login -u $DOCKER_REGISTRY_USERNAME -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY_HOST
  tags:
    - docker-executor
  stage: pages
  only:
    - master
  script:
    - mv build public
    - mv public/reports/cspmasterleafnode_htmlcov/* public
    - mv public/reports/cspsubarrayleafnode_htmlcov/* public
    - mv public/reports/sdpsubarrayleafnode_htmlcov/* public
    - mv public/reports/mccssubarrayleafnode_htmlcov/* public
    - mv public/reports/mccsmasterleafnode_htmlcov/* public
    - mv public/reports/sdpmasterleafnode_htmlcov/* public
    - mv public/reports/dishleafnode_htmlcov/* public
    - mv public/reports/subarraynodelow_htmlcov/* public
    - mv public/reports/centralnodelow_htmlcov/* public
  artifacts:
    paths:
      - public

release tmc:
  stage: release
  image: nexus.engageska-portugal.pt/ska-docker/tango-builder:latest
  before_script:
  - docker login -u $DOCKER_REGISTRY_USERNAME -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY_HOST
  tags:
    - docker-executor
  script:
    - make release-ska-tmc USERNAME=$GITLAB_USER_NAME EMAILID=$GITLAB_USER_EMAIL # Publish tag on the gitlab and tagged image on Nexus
  when: manual

# Standardised included jobs
variables:
  CHARTS_TO_PUBLISH: tmc-low tmc-mid
include:
# Helm Chart Publish
# https://developer.skatelescope.org/en/latest/development/software_package_release_procedure.html#package-and-publish-helm-charts-to-the-ska-helm-chart-repository
- project: 'ska-telescope/templates-repository'
  file: 'gitlab-ci/includes/helm_publish.yml'
# Create Gitlab CI badges from CI metrics
# https://developer.skatelescope.org/en/latest/tools/continuousintegration.html#automated-collection-of-ci-health-metrics-as-part-of-the-ci-pipeline
- project: 'ska-telescope/templates-repository'
  file: 'gitlab-ci/includes/post_step.yml'