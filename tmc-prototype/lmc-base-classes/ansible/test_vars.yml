# TESTTING WITH :
# ansible-playbook -i hosts test_vars.yml --limit devl5 --verbose

- hosts: all
  vars:
    my_element_details: "{{ hostvars[inventory_hostname].element_details }}"
    my_groups: "{{ hostvars[inventory_hostname].group_names }}"
    my_name: "{{ hostvars[inventory_hostname].element_details.name }}"
    my_id: "{{ hostvars[inventory_hostname].element_details.id }}"
    my_instance: "{{ hostvars[inventory_hostname].element_details.instance }}"
    testVars: "{{ lookup('file', './inventories/{{ my_name }}/config_files/test_vars.json') | from_json }}"
    configDbFile: "{{ lookup('file', './inventories/{{ my_name }}/config_files/config_db.json.j2') | from_json }}"
    configDbJson: "{{ lookup('template', './inventories/{{ my_name }}/config_files/config_db.json.j2') }}"
    configPropertiesFile: "{{ lookup('file', './inventories/{{ my_name }}/config_files/config_properties.json.j2') | from_json }}"
    configPropertiesJson: "{{ lookup('template', './inventories/{{ my_name }}/config_files/config_properties.json.j2') }}"
    configStarterFile: "{{ lookup('file', './inventories/{{ my_name }}/config_files/config_starter.json.j2') | from_json }}"
    configStarterJson: "{{ lookup('template', './inventories/{{ my_name }}/config_files/config_starter.json.j2') }}"

  tasks:
    - name: Print my hostvars
      debug:
          msg="{{item}}"
      with_items:
          - "hostvars[{{ inventory_hostname }}] = {{ hostvars[inventory_hostname] }}"
      tags:
        - prints

    - name: Print vars
      debug:
          msg={{item}}
      with_items:
          - "software_root = {{ software_root }}"
          - "ansible_distribution = {{ ansible_distribution }}"
          - "ansible_hostname = {{ ansible_hostname }}"
          - "ansible_nodename = {{ ansible_nodename }}"
          - "inventory_hostname = {{ inventory_hostname }}"
          - "hostvars[{{ inventory_hostname }}].group_names = {{ hostvars[inventory_hostname].group_names }}"
          - "hostvars[{{ inventory_hostname }}].element_details = {{ hostvars[inventory_hostname].element_details }}"
          - "element_details.type = {{ hostvars[inventory_hostname].element_details.type }}"
          - "element_details.name = {{ hostvars[inventory_hostname].element_details.name }}"
          - "element_details.id = {{ hostvars[inventory_hostname].element_details.id }}"
      tags:
        - prints


    #- name: Extract my vars
    #  set_fact:
    #    my_element_details: "{{ hostvars[inventory_hostname].element_details }}"
    #    my_groups: "{{ hostvars[inventory_hostname].group_names }}"
    #    my_name: "{{ hostvars[inventory_hostname].element_details.name }}"
    #    my_id: "{{ hostvars[inventory_hostname].element_details.id }}"
    #  tags:
    #    - prints

    - name: Print my vars
      debug:
          msg="{{item}}"
      with_items:
          - "my_element_details = {{ my_element_details }}"
          - "my_groups = {{ my_groups }}"

          - "my_name = {{ my_name }}"
          - "my_id = {{ my_id }}"
          - "my_instance = {{ my_instance }}"
          - "my_groups = {{ my_groups }}"
      tags:
        - prints

    - name: testVars find key2 22
      with_dict: "{{ testVars['queue'] }}"
      shell: |
        if echo "{{ item.value.key2 }}" | grep -q "22" ; then
            echo "SUCCESS - found 22 at {{ item.key }}"
        fi

    - name: testVars find my id
      with_dict: "{{ testVars['queue'] }}"
      shell: |
        if echo "{{ item.value.key1 }}" | grep -q "{{ my_id }}" ; then
            echo "SUCCESS - found {{ my_id }} at {{ item.key }}"
        fi

    - name: Print config files and vars
      debug:
          msg="{{item}}"
      with_items:
          - "configDbFile = {{ configDbFile }}"
          - "configDbJson = {{ configDbJson }}"
          - "configPropertiesFile = {{ configPropertiesFile }}"
          - "configPropertiesJson = {{ configPropertiesJson }}"
      tags:
        - prints
